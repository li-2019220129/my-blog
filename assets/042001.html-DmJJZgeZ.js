import{_ as t,c as o,b as s,a,d as p,e as l,r as c,o as i}from"./app-CVQywZ7D.js";const r="/my-blog/play.mp4",u={},k={href:"https://microsoft.github.io/monaco-editor/docs.html",target:"_blank",rel:"noopener noreferrer"};function d(v,n){const e=c("ExternalLinkIcon");return i(),o("div",null,[n[2]||(n[2]=s(`<h2 id="一、为什么选择monaco-editor" tabindex="-1"><a class="header-anchor" href="#一、为什么选择monaco-editor"><span>一、为什么选择monaco-editor？</span></a></h2><p>由于业务的需求，团队后续的页面开发都有代码编辑器的使用，所以需要封装一个代码编辑器的组件，且还要支持自定义的语言高亮和语法提示，通过资料查询，市面上大体有两种常用的三方库：CodeMirror和Monaco Editor，不过对于美观和功能来说，Monaco Editor更加强大，所以最后我选择了Monaco Editor。下面我会一步步来封装一个基于Monaco Editor的代码编辑器组件。</p><h2 id="二、搭建vue3加ts项目环境-用于组件的测试。" tabindex="-1"><a class="header-anchor" href="#二、搭建vue3加ts项目环境-用于组件的测试。"><span>二、搭建vue3加ts项目环境，用于组件的测试。</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">   // 包管理工具是pnpm下使用</span>
<span class="line">   <span class="token function">pnpm</span> create vue@latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>然后根据自己的选择创建项目(这里我们只做组件测试所以选择最简单配置即可)</strong></p><p><img src="https://i.postimg.cc/wjgyFRHz/e128e91b906e2bc8e5de90d39101cbe.png" alt="img"></p><p><strong>安装monaco-editor依赖，同时安装@monaco-editor/loader</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    <span class="token function">pnpm</span> <span class="token function">install</span> monaco-editor</span>
<span class="line">    // 加载器</span>
<span class="line">    <span class="token function">pnpm</span> <span class="token function">install</span> @monaco-editor/loader</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="monaco-editor-loader-详细说明" tabindex="-1"><a class="header-anchor" href="#monaco-editor-loader-详细说明"><span>@monaco-editor/loader 详细说明</span></a></h1><p><code>@monaco-editor/loader</code> 是一个用于懒加载和初始化 Monaco Editor 的工具库，主要用于解决直接引入 <code>monaco-editor</code> 时常见的路径、加载和 worker 错误问题。</p><hr><p><strong>什么是 <code>@monaco-editor/loader</code></strong></p><p>它本质上是一个轻量封装器，内部处理了 Monaco 的模块加载（基于 AMD），让你可以更优雅地在现代前端项目中使用 Monaco Editor，而不必深度改造你的构建工具（Webpack/Vite 等）。</p><hr><p><strong>为什么需要它？</strong></p><table><thead><tr><th>问题类型</th><th>描述</th></tr></thead><tbody><tr><td>❌ 路径错误</td><td><code>Cannot read properties of undefined (reading &#39;toUrl&#39;)</code>，因为 Monaco 用的是 <code>require.config()</code> 需要特殊配置</td></tr><tr><td>❌ 无法加载 worker</td><td>JSON/CSS/TS 的语法校验失败，因为依赖独立的 <code>web worker</code></td></tr><tr><td>❌ 多次加载浪费资源</td><td>每次都调用 <code>monaco.editor.create()</code> 时容易导致重复加载模块</td></tr></tbody></table><hr><h2 id="三、开始组件的编写" tabindex="-1"><a class="header-anchor" href="#三、开始组件的编写"><span>三、开始组件的编写</span></a></h2><p><strong>好的现在我们已经搭建好项目了，然后monaco-editor相关的依赖也已经安装完毕了，那我们下面就开始组件的编写</strong></p><p>一、在写组件之前我们考虑一下，这个组件我们要怎么写，要怎么给同事使用的时候可以更好的使用，同时我们还得考虑代码需要接受哪些参数： 这里我们先定义对应的props</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> monaco <span class="token keyword">from</span> <span class="token string">&#39;monaco-editor&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 自定义语言配置接口</span>
<span class="line"> * <span class="token keyword">@interface</span> LanguageConfig</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> id - 语言的唯一标识符，例如：&#39;myCustomLanguage&#39;</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>monaco.languages.IMonarchLanguage<span class="token punctuation">}</span> languageDef - Monaco Editor的Monarch语言定义，</span>
<span class="line"> *                                                            用于配置语法高亮规则、关键字、符号等</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">LanguageConfig</span> <span class="token punctuation">{</span></span>
<span class="line">  id<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  languageDef<span class="token operator">:</span> monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span>IMonarchLanguage</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 代码补全项的接口定义</span>
<span class="line"> * <span class="token keyword">@interface</span> CompletionItem</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> label - 显示在补全列表中的文本标签</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>monaco.languages.CompletionItemKind<span class="token punctuation">}</span> [kind] - 补全项的类型，如变量、函数、类等</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> [insertText] - 选中补全项后实际插入的文本，如果不提供则使用 label</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> [detail] - 补全项的额外详细信息，显示在右侧</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> [documentation] - 补全项的文档说明，鼠标悬停时显示</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">CompletionItem</span> <span class="token punctuation">{</span></span>
<span class="line">  label<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  kind<span class="token operator">?</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span>CompletionItemKind</span>
<span class="line">  insertText<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  detail<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  documentation<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 编辑器组件的属性接口</span>
<span class="line"> * <span class="token keyword">@interface</span> Props</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> modelValue - 编辑器的内容值，支持双向绑定</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> [language] - 编辑器的语言模式，例如：&#39;javascript&#39;, &#39;typescript&#39;, &#39;html&#39;等</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>monaco.editor.IStandaloneEditorConstructionOptions<span class="token punctuation">}</span> [options] - Monaco Editor的配置选项，</span>
<span class="line"> *                                                                           可以设置主题、字体、行号等</span>
<span class="line"> * <span class="token keyword">@property</span> <span class="token punctuation">{</span>LanguageConfig<span class="token punctuation">}</span> [customLanguage] - 自定义语言配置，用于添加新的语言支持</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span></span>
<span class="line">  modelValue<span class="token operator">:</span> <span class="token builtin">string</span> </span>
<span class="line">  language<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  options<span class="token operator">?</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>IStandaloneEditorConstructionOptions</span>
<span class="line">  customLanguage<span class="token operator">?</span><span class="token operator">:</span> LanguageConfig<span class="token punctuation">,</span></span>
<span class="line">  completions<span class="token operator">?</span><span class="token operator">:</span> CompletionItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21)),a("p",null,[n[1]||(n[1]=p("Monaco Editor 的还有很多配置，这边我不一一介绍，地址我贴出来：")),a("a",k,[n[0]||(n[0]=p("Monaco Editor 官方文档")),l(e)])]),n[3]||(n[3]=s(`<p>一、好的，类型我们定义好了，现在我们开始上代码</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>editorContainer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>editor-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> watch<span class="token punctuation">,</span> onMounted<span class="token punctuation">,</span> onBeforeUnmount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> loader <span class="token keyword">from</span> <span class="token string">&#39;@monaco-editor/loader&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> monaco <span class="token keyword">from</span> <span class="token string">&#39;monaco-editor&#39;</span></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">LanguageConfig</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">id</span><span class="token operator">:</span> string</span>
<span class="line">  <span class="token literal-property property">languageDef</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span>IMonarchLanguage</span>
<span class="line">  conf<span class="token operator">?</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span>LanguageConfiguration</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">CompletionItem</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">label</span><span class="token operator">:</span> string</span>
<span class="line">  kind<span class="token operator">?</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span>CompletionItemKind</span>
<span class="line">  insertText<span class="token operator">?</span><span class="token operator">:</span> string</span>
<span class="line">  detail<span class="token operator">?</span><span class="token operator">:</span> string</span>
<span class="line">  documentation<span class="token operator">?</span><span class="token operator">:</span> string</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">modelValue</span><span class="token operator">:</span> string</span>
<span class="line">  language<span class="token operator">?</span><span class="token operator">:</span> string</span>
<span class="line">  options<span class="token operator">?</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>IStandaloneEditorConstructionOptions</span>
<span class="line">  customLanguage<span class="token operator">?</span><span class="token operator">:</span> LanguageConfig</span>
<span class="line">  completions<span class="token operator">?</span><span class="token operator">:</span> CompletionItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> props <span class="token operator">=</span> defineProps<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> editorContainer <span class="token operator">=</span> ref<span class="token operator">&lt;</span>HTMLDivElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">let</span> <span class="token literal-property property">editorInstance</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>IStandaloneCodeEditor <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line"><span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>editorContainer<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    loader<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span> monaco <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    loader<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&#39;vs/nls&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">availableLanguages</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;*&#39;</span><span class="token operator">:</span> <span class="token string">&#39;zh-cn&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    loader<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">monaco</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>customLanguage<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">registerCustomLanguage</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>customLanguage<span class="token punctuation">,</span> monaco<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>completions <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span>language<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">registerCompletionProvider</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>language<span class="token punctuation">,</span> monaco<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      editorInstance <span class="token operator">=</span> monaco<span class="token punctuation">.</span>editor<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>editorContainer<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">value</span><span class="token operator">:</span> props<span class="token punctuation">.</span>modelValue<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">language</span><span class="token operator">:</span> props<span class="token punctuation">.</span>language <span class="token operator">||</span> <span class="token string">&#39;javascript&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token string">&#39;vs&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">wordWrap</span><span class="token operator">:</span> <span class="token string">&#39;on&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">automaticLayout</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">scrollBeyondLastLine</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token operator">...</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      editorInstance<span class="token punctuation">.</span><span class="token function">onDidChangeModelContent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> value <span class="token operator">=</span> editorInstance<span class="token operator">?.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">        <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">watch</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>modelValue<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> currentValue <span class="token operator">=</span> editorInstance<span class="token operator">?.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">!==</span> currentValue<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      editorInstance<span class="token operator">?.</span><span class="token function">setValue</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token function">onBeforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  editorInstance<span class="token operator">?.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 注册自定义语言到 Monaco Editor</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>LanguageConfig<span class="token punctuation">}</span></span> <span class="token parameter">config</span> - 自定义语言配置对象</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>any<span class="token punctuation">}</span></span> <span class="token parameter">monaco</span> - Monaco Editor 实例</span>
<span class="line"> * <span class="token keyword">@description</span> 注册自定义语言的语法高亮、注释、括号匹配等配置</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">registerCustomLanguage</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">config</span><span class="token operator">:</span> LanguageConfig<span class="token punctuation">,</span> <span class="token literal-property property">monaco</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">getLanguages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">lang</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> lang<span class="token punctuation">.</span>id <span class="token operator">===</span> config<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> config<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">setMonarchTokensProvider</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>id<span class="token punctuation">,</span> config<span class="token punctuation">.</span>languageDef<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// 添加注释语法支持到语言配置中</span></span>
<span class="line">    monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">setLanguageConfiguration</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">comments</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">lineComment</span><span class="token operator">:</span> <span class="token string">&#39;//&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">blockComment</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;/*&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*/&#39;</span><span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">brackets</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token string">&#39;{&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;}&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token string">&#39;[&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">autoClosingPairs</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">close</span><span class="token operator">:</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token string">&#39;{&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">close</span><span class="token operator">:</span> <span class="token string">&#39;}&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token string">&#39;[&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">close</span><span class="token operator">:</span> <span class="token string">&#39;]&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">close</span><span class="token operator">:</span> <span class="token string">&#39;)&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token string">&#39;/*&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">close</span><span class="token operator">:</span> <span class="token string">&#39;*/&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">notIn</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;string&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 注册代码补全提供程序</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">languageId</span> - 语言ID</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>any<span class="token punctuation">}</span></span> <span class="token parameter">monaco</span> - Monaco Editor 实例</span>
<span class="line"> * <span class="token keyword">@description</span> 为指定语言注册智能提示功能，包括触发字符和补全项的生成</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">registerCompletionProvider</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token parameter"><span class="token literal-property property">languageId</span><span class="token operator">:</span> string<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">monacoInstance</span><span class="token operator">:</span> <span class="token keyword">typeof</span> monaco</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  monacoInstance<span class="token punctuation">.</span>languages<span class="token punctuation">.</span><span class="token function">registerCompletionItemProvider</span><span class="token punctuation">(</span>languageId<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">triggerCharacters</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 只在输入点号时触发</span></span>
<span class="line">    <span class="token function-variable function">provideCompletionItems</span><span class="token operator">:</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token parameter"><span class="token literal-property property">model</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>editor<span class="token punctuation">.</span>ITextModel<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">position</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>Position</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> textUntilPosition <span class="token operator">=</span> model<span class="token punctuation">.</span><span class="token function">getValueInRange</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">startLineNumber</span><span class="token operator">:</span> position<span class="token punctuation">.</span>lineNumber<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">startColumn</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">endLineNumber</span><span class="token operator">:</span> position<span class="token punctuation">.</span>lineNumber<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">endColumn</span><span class="token operator">:</span> position<span class="token punctuation">.</span>column</span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 只在输入点号或者正在输入单词时提供建议</span></span>
<span class="line">      <span class="token keyword">const</span> wordMatch <span class="token operator">=</span> textUntilPosition<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\w\\d]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> dotMatch <span class="token operator">=</span> textUntilPosition<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>wordMatch <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>dotMatch<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">suggestions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">const</span> currentWord <span class="token operator">=</span> wordMatch <span class="token operator">?</span> wordMatch<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">      <span class="token keyword">let</span> <span class="token literal-property property">suggestions</span><span class="token operator">:</span> monaco<span class="token punctuation">.</span>languages<span class="token punctuation">.</span>CompletionItem<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>completions<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 使用 Set 来存储已经添加的标签，避免重复</span></span>
<span class="line">        <span class="token keyword">const</span> addedLabels <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        suggestions <span class="token operator">=</span> props<span class="token punctuation">.</span>completions</span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span></span>
<span class="line">              currentWord <span class="token operator">&amp;&amp;</span></span>
<span class="line">              <span class="token operator">!</span>item<span class="token punctuation">.</span>label<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>currentWord<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token keyword">return</span> <span class="token boolean">false</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>addedLabels<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>label<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token keyword">return</span> <span class="token boolean">false</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            addedLabels<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>label<span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">label</span><span class="token operator">:</span> item<span class="token punctuation">.</span>label<span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">kind</span><span class="token operator">:</span> item<span class="token punctuation">.</span>kind <span class="token operator">||</span> monacoInstance<span class="token punctuation">.</span>languages<span class="token punctuation">.</span>CompletionItemKind<span class="token punctuation">.</span>Text<span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">insertText</span><span class="token operator">:</span> item<span class="token punctuation">.</span>insertText <span class="token operator">||</span> item<span class="token punctuation">.</span>label<span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">detail</span><span class="token operator">:</span> item<span class="token punctuation">.</span>detail<span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">documentation</span><span class="token operator">:</span> item<span class="token punctuation">.</span>documentation<span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">range</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token literal-property property">startLineNumber</span><span class="token operator">:</span> position<span class="token punctuation">.</span>lineNumber<span class="token punctuation">,</span></span>
<span class="line">              <span class="token literal-property property">startColumn</span><span class="token operator">:</span> wordMatch</span>
<span class="line">                <span class="token operator">?</span> position<span class="token punctuation">.</span>column <span class="token operator">-</span> currentWord<span class="token punctuation">.</span>length</span>
<span class="line">                <span class="token operator">:</span> position<span class="token punctuation">.</span>column<span class="token punctuation">,</span></span>
<span class="line">              <span class="token literal-property property">endLineNumber</span><span class="token operator">:</span> position<span class="token punctuation">.</span>lineNumber<span class="token punctuation">,</span></span>
<span class="line">              <span class="token literal-property property">endColumn</span><span class="token operator">:</span> position<span class="token punctuation">.</span>column</span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        suggestions<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">incomplete</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 表示这是完整的建议列表</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line"><span class="token selector">.editor-container</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、组件的使用" tabindex="-1"><a class="header-anchor" href="#四、组件的使用"><span>四、组件的使用</span></a></h2><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MonacoEditor</span></span>
<span class="line">    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>code<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">:completions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customCompletions<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">:customLanguage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customLanguage<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mylang<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MonacoEditor</span> </span>
<span class="line">    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>code<span class="token punctuation">&quot;</span></span> </span>
<span class="line">    <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>json<span class="token punctuation">&quot;</span></span> </span>
<span class="line">  <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> MonacoEditor <span class="token keyword">from</span> <span class="token string">&#39;./components/code-editor.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> customLanguage <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;mylang&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">languageDef</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">tokenizer</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\|?(lizhiyang)\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">&#39;keyword&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&quot;[^&quot;]*&quot;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(or|by|and)\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">&#39;keyword&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[{}()\\[\\]]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-zA-Z_]\\w*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;identifier&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;keyword&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/\\/.*$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;comment&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token comment">// 单行注释</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/\\*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token string">&#39;comment&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token string">&#39;@comment&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>  <span class="token comment">// 多行注释开始</span></span>
<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">comment</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^\\/*]+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;comment&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\*\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;comment&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;@pop&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token comment">// 多行注释结束</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\/*]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;comment&#39;</span><span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> customCompletions <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;myfunc&#39;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">kind</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">insertText</span><span class="token operator">:</span> <span class="token string">&#39;myfunc &#39;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&#39;定义函数&#39;</span> </span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;myvar&#39;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">kind</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">insertText</span><span class="token operator">:</span> <span class="token string">&#39;myvar &#39;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&#39;定义变量&#39;</span> </span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;sayHello&#39;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">kind</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">insertText</span><span class="token operator">:</span> <span class="token string">&#39;sayHello&#39;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&#39;打印 hello&#39;</span> </span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;sayGoodbye&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">kind</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">insertText</span><span class="token operator">:</span> <span class="token string">&#39;sayGoodbye&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">detail</span><span class="token operator">:</span> <span class="token string">&#39;打印 goodbye&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>演示视频</strong></p><p><video src="`+r+'" controls width="100%"></video></p>',6))])}const g=t(u,[["render",d]]),b=JSON.parse('{"path":"/blogs/businessscenario/2025/042001.html","title":"基于monaco-editor，代码编辑器组件集成","lang":"en-US","frontmatter":{"title":"基于monaco-editor，代码编辑器组件集成","date":"2025/04/20","tags":["monaco-editor"],"categories":["业务组件开发"]},"headers":[{"level":2,"title":"一、为什么选择monaco-editor？","slug":"一、为什么选择monaco-editor","link":"#一、为什么选择monaco-editor","children":[]},{"level":2,"title":"二、搭建vue3加ts项目环境，用于组件的测试。","slug":"二、搭建vue3加ts项目环境-用于组件的测试。","link":"#二、搭建vue3加ts项目环境-用于组件的测试。","children":[]},{"level":2,"title":"三、开始组件的编写","slug":"三、开始组件的编写","link":"#三、开始组件的编写","children":[]},{"level":2,"title":"四、组件的使用","slug":"四、组件的使用","link":"#四、组件的使用","children":[]}],"git":{"createdTime":1748771248000,"updatedTime":1748771248000,"contributors":[{"name":"lzy","email":"3312202467@qq.com","commits":1}]},"filePathRelative":"blogs/businessscenario/2025/042001.md"}');export{g as comp,b as data};
